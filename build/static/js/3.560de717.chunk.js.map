{"version":3,"sources":["../../src/bytes.ts","../../src/utils.ts","../../src/index.ts","../../src/secp256k1v3-adapter.ts","../../src/hash.ts","../../src/rpc/walletMidddleware.ts","../../src/rpc/ethRpcMiddlewares.ts","../../src/rpc/jrpcClient.ts","../../src/providers/injectedProviders/walletConnectUtils.ts","../../src/providers/injectedProviders/WalletConnectProvider.ts","../../src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../../src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../../src/personal-sign.ts","../../../src/secp256k1v3-lib/index.ts","../../../src/secp256k1v3-lib/der.ts","../../src/constants.ts","../../src/account.ts","../../src/signature.ts","../../src/object.ts","../../src/sign-typed-data.ts","../../src/encryption.ts","../node_modules/tweetnacl-util/nacl-util.js"],"names":["ethjsUtil","require","exports","bytes","Buffer","allocUnsafe","fill","msg","length","right","buf","copy","slice","a","first","stripHexPrefix","toString","v","isBuffer","Array","isArray","from","isHexString","Error","padToEven","intToBuffer","undefined","BN","isBN","toArrayLike","toArray","toNumber","num","fromTwos","toTwos","str","isHexPrefixed","ba","array","i","push","padWithZeroes","hexString","targetLength","test","String","prototype","padStart","call","value","ethjs_util_1","ethereumjs_util_1","r","s","rSig","sSig","vSig","rStr","sStr","vStr","concat","messageHash","signature","sigParams","input","buffer","toLowerCase","secp256k1","Object","assign","__exportStar","secp256k1v3","der","privateKey","privateKeyVerify","Uint8Array","compressed","RangeError","publicKey","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyCreate","publicKeyConvert","publicKeyVerify","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","keys","forEach","publicKeyCombine","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","message","options","TypeError","signOptions","data","noncefn","algo","attempt","bufferAlgo","bufferData","sig","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","keccak224","keccak384","k256","keccak512","createHash","bits","bytes_1","update","digest","padded","hash","rlp","encode","resemblesAddress","createWalletMiddleware","getAccounts","_ref","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","address","req","accounts","normalizedAccounts","map","_address","normalizedAddress","includes","ethErrors","rpc","invalidParams","res","result","methodNotSupported","txParams","params","extraParams","msgParams","_objectSpread$2","version","firstParam","secondParam","warning","ciphertext","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","chainId","next","end","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getProviderHandlers","connector","_","sendTransaction","signTransaction","signMessage","signPersonalMessage","log","debug","signTypedData","WalletConnectProvider","constructor","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","EIP155","provider","custom","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_ref2","currentChainConfig","getChainConfig","ticker","tickerName","updateChain","Number","parseInt","nativeCurrency","name","symbol","networkId","rpcUrl","configure","lookupNetwork","connected","WalletLoginError","notConnectedError","connectedHexChainId","isHexStrict","WalletInitializationError","rpcConnectionError","emit","ethMiddleware","engine","JRPCEngine","providerFromEngine","updateProviderEngineProxy","on","error","payload","connectedChainId","BaseProvider","getCommonConfiguration","supportsEIP1559","displayName","hardfork","Hardfork","London","Berlin","customChainParams","Common","privKey","getProviderEngineProxy","privateToAddress","providerEngineProxy","maxFeePerGas","maxPriorityFeePerGas","common","unsignedEthTx","TransactionFactory","fromTxData","signedTx","sign","serialize","txHash","rawMessageSig","privKeyBuffer","personalSign","SignTypedDataVersion","V1","V3","V4","info","getEncryptionPublicKey","stripped","buff","decrypt","encryptedData","JSON","parse","providerFactory","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","network","chainDisconnected","chainSwitchHandlers","addChain","chainName","rpcUrls","blockExplorerUrls","blockExplorer","switchChain","createChainSwitchMiddleware","chainParams","wallet_addEthereumChain","wallet_switchEthereumChain","accountHandlers","updatePrivatekey","updateAccount","createAccountMiddleware","accountParams","wallet_updateAccount","enumerable","get","concatSig","normalize","getPublicKeyFor","utils_1","msgHash","sender","ec","EC","ecparams","curve","d","ucmp","n","point","g","mul","toPublicKey","getX","getY","bn","isZero","invm","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","index","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","assert","addr","eip1191ChainId","prefix","hash_1","ret","toUpperCase","nonce","nonceBN","salt","initCode","fromBuf","saltBuf","initCodeBuf","sanitize","pubKey","calculateSigRecovery","isValidSigRecovery","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","self","fields","raw","_fields","toJSON","label","obj_1","field","getter","setter","allowZero","allowLess","defineProperty","configurable","set","default","alias","decode","keys_1","indexOf","validateVersion","allowedVersions","join","encodeField","types","type","encodeData","lastIndexOf","parsedType","typeValuePairs","item","ethereumjs_abi_1","primaryType","encodedTypes","encodedValues","hashType","encodeType","unsortedDeps","findTypeDependencies","delete","deps","sort","t","results","Set","match","has","add","hashStruct","sanitizeData","sanitizedData","key","properties","EIP712Domain","_typedSignatureHash","typedData","e","schema","additionalProperties","items","enum","ints","uints","getSolidityTypes","required","domain","eip712Hash","parts","hashBuffer","encrypt","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","output","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","dataWithPadding","padding","modVal","byteLength","stringify","padLength","repeat","privateKeyUint8Array","encryptionPublicKey","root","f","module","util","this","validateBase64","unescape","encodeURIComponent","b","charCodeAt","arr","fromCharCode","decodeURIComponent","escape","atob","btoa"],"mappings":"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EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGI8U,EAAqC/V,EAAOiB,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGFnB,EAAQ6E,iBAAmB,SACzBN,EACAK,EACAF,QAAA,QAAAA,MAEA,IAAMkF,EAAS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","file":"static/js/3.560de717.chunk.js","sourcesContent":[null,"import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n",null,null,null,null,null,null,null,null,null,"import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n",null,null,null,null,null,null,"import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string', enum: getSolidityTypes() },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Get a list of all Solidity types.\n *\n * @returns A list of all Solidity types.\n */\nfunction getSolidityTypes() {\n  const types = ['bool', 'address', 'string', 'bytes'];\n  const ints = Array.from(new Array(32)).map(\n    (_, index) => `int${(index + 1) * 8}`,\n  );\n  const uints = Array.from(new Array(32)).map(\n    (_, index) => `uint${(index + 1) * 8}`,\n  );\n  const bytes = Array.from(new Array(32)).map(\n    (_, index) => `bytes${index + 1}`,\n  );\n\n  return [...types, ...ints, ...uints, ...bytes];\n}\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n"],"sourceRoot":""}